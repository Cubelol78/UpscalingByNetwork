# server/security/__init__.py
"""
Module de s√©curit√© pour le serveur d'upscaling distribu√©
"""

# Import s√©curis√© des modules de s√©curit√©
try:
    from .server_security import ServerSecurity
    __all__ = ['ServerSecurity']
except ImportError as e:
    print(f"‚ö†Ô∏è Erreur import module s√©curit√© serveur: {e}")
    ServerSecurity = None
    __all__ = []

# Classe de secours pour la s√©curit√©
class FallbackSecurity:
    """Classe de s√©curit√© de secours sans chiffrement"""
    
    def __init__(self):
        self.logger = None
        
    def generate_session_key(self, client_id: str):
        return b"fallback_key"
    
    def encrypt_data(self, data: bytes, client_id: str):
        return data  # Pas de chiffrement en mode secours
    
    def decrypt_data(self, data: bytes, client_id: str):
        return data  # Pas de d√©chiffrement en mode secours
    
    def is_session_valid(self, client_id: str):
        return True  # Toujours valide en mode secours

# Si le module principal n'est pas disponible, utiliser le fallback
if ServerSecurity is None:
    print("üîÑ Utilisation du module de s√©curit√© de secours (SANS CHIFFREMENT)")
    ServerSecurity = FallbackSecurity
    __all__.append('ServerSecurity')